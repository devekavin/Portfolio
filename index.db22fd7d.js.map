{"mappings":"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","sources":["<anon>","src/sendMail.js","node_modules/@emailjs/browser/es/index.js","node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","node_modules/@emailjs/browser/es/methods/init/init.js","node_modules/@emailjs/browser/es/store/store.js","node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","node_modules/@emailjs/browser/es/methods/send/send.js","node_modules/@emailjs/browser/es/api/sendPost.js","node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js"],"sourcesContent":["// sending email\nclass $365480cad2bbacec$export$29b488039e3d4c2d {\n    constructor(_status = 0, _text = 'Network Error'){\n        this.status = _status;\n        this.text = _text;\n    }\n}\n\n\nconst $050ad26521b99438$export$2b84f07db8df86ee = ()=>{\n    if (typeof localStorage === 'undefined') return;\n    return {\n        get: (key)=>Promise.resolve(localStorage.getItem(key)),\n        set: (key, value)=>Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key)=>Promise.resolve(localStorage.removeItem(key))\n    };\n};\n\n\nconst $c798475fc5eb7ae4$export$6f57813fe9f31bf9 = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: (0, $050ad26521b99438$export$2b84f07db8df86ee)()\n};\n\n\nconst $0b89b563b8ce5c16$export$ecbd7d678ac4909b = (options)=>{\n    if (!options) return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') return {\n        publicKey: options\n    };\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') return options;\n    return {};\n};\n\n\nconst $521ca2b4a362b637$export$2cd8252107eb640b = (options, origin = 'https://api.emailjs.com')=>{\n    if (!options) return;\n    const opts = (0, $0b89b563b8ce5c16$export$ecbd7d678ac4909b)(options);\n    (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).publicKey = opts.publicKey;\n    (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).blockHeadless = opts.blockHeadless;\n    (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).storageProvider = opts.storageProvider;\n    (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).blockList = opts.blockList;\n    (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).limitRate = opts.limitRate;\n    (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).origin = opts.origin || origin;\n};\n\n\n\n\n\nconst $ec190f1f3b1ae57b$export$4a68059d3a005c64 = async (url, data, headers = {})=>{\n    const response = await fetch((0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).origin + url, {\n        method: 'POST',\n        headers: headers,\n        body: data\n    });\n    const message = await response.text();\n    const responseStatus = new (0, $365480cad2bbacec$export$29b488039e3d4c2d)(response.status, message);\n    if (response.ok) return responseStatus;\n    throw responseStatus;\n};\n\n\n\nconst $90a7819081cf59b4$export$1f3bf48e9edf7d72 = (publicKey, serviceID, templateID)=>{\n    if (!publicKey || typeof publicKey !== 'string') throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    if (!serviceID || typeof serviceID !== 'string') throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    if (!templateID || typeof templateID !== 'string') throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n};\n\n\nconst $606788fef0a93b78$export$80b670b04253020b = (templateParams)=>{\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n};\n\n\nconst $9e97281bc02a549f$export$b509da924d51a9a9 = (navigator)=>{\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n\n\n\nconst $ab7d2fa3f7df0c38$export$a8135c843594e85b = ()=>{\n    return new (0, $365480cad2bbacec$export$29b488039e3d4c2d)(451, 'Unavailable For Headless Browser');\n};\n\n\nconst $d4556afef3d17824$export$1727dd877829fee8 = (list, watchVariable)=>{\n    if (!Array.isArray(list)) throw 'The BlockList list has to be an array';\n    if (typeof watchVariable !== 'string') throw 'The BlockList watchVariable has to be a string';\n};\n\n\nconst $52e7c6c8b64bb1c0$var$isBlockListDisabled = (options)=>{\n    return !options.list?.length || !options.watchVariable;\n};\nconst $52e7c6c8b64bb1c0$var$getValue = (data, name)=>{\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nconst $52e7c6c8b64bb1c0$export$c7ab883573eb12a4 = (options, params)=>{\n    if ($52e7c6c8b64bb1c0$var$isBlockListDisabled(options)) return false;\n    (0, $d4556afef3d17824$export$1727dd877829fee8)(options.list, options.watchVariable);\n    const value = $52e7c6c8b64bb1c0$var$getValue(params, options.watchVariable);\n    if (typeof value !== 'string') return false;\n    return options.list.includes(value);\n};\n\n\n\nconst $e033b5517693ceb4$export$b30160cec00781e = ()=>{\n    return new (0, $365480cad2bbacec$export$29b488039e3d4c2d)(403, 'Forbidden');\n};\n\n\nconst $f1b4a42f5460eb37$export$88c64f8d5fea404b = (throttle, id)=>{\n    if (typeof throttle !== 'number' || throttle < 0) throw 'The LimitRate throttle has to be a positive number';\n    if (id && typeof id !== 'string') throw 'The LimitRate ID has to be a non-empty string';\n};\n\n\nconst $ccb9264e82a8b92f$var$getLeftTime = async (id, throttle, storage)=>{\n    const lastTime = Number(await storage.get(id) || 0);\n    return throttle - Date.now() + lastTime;\n};\nconst $ccb9264e82a8b92f$export$8b7f6a1a004faa27 = async (defaultID, options, storage)=>{\n    if (!options.throttle || !storage) return false;\n    (0, $f1b4a42f5460eb37$export$88c64f8d5fea404b)(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await $ccb9264e82a8b92f$var$getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) return true;\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n\n\n\nconst $0c0740911a700545$export$29b72785a20a20d9 = ()=>{\n    return new (0, $365480cad2bbacec$export$29b488039e3d4c2d)(429, 'Too Many Requests');\n};\n\n\nconst $4e1a944052b5621b$export$89db4734f6c919c4 = async (serviceID, templateID, templateParams, options)=>{\n    const opts = (0, $0b89b563b8ce5c16$export$ecbd7d678ac4909b)(options);\n    const publicKey = opts.publicKey || (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).publicKey;\n    const blockHeadless = opts.blockHeadless || (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).blockHeadless;\n    const storageProvider = opts.storageProvider || (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).storageProvider;\n    const blockList = {\n        ...(0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).blockList,\n        ...opts.blockList\n    };\n    const limitRate = {\n        ...(0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).limitRate,\n        ...opts.limitRate\n    };\n    if (blockHeadless && (0, $9e97281bc02a549f$export$b509da924d51a9a9)(navigator)) return Promise.reject((0, $ab7d2fa3f7df0c38$export$a8135c843594e85b)());\n    (0, $90a7819081cf59b4$export$1f3bf48e9edf7d72)(publicKey, serviceID, templateID);\n    (0, $606788fef0a93b78$export$80b670b04253020b)(templateParams);\n    if (templateParams && (0, $52e7c6c8b64bb1c0$export$c7ab883573eb12a4)(blockList, templateParams)) return Promise.reject((0, $e033b5517693ceb4$export$b30160cec00781e)());\n    if (await (0, $ccb9264e82a8b92f$export$8b7f6a1a004faa27)(location.pathname, limitRate, storageProvider)) return Promise.reject((0, $0c0740911a700545$export$29b72785a20a20d9)());\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams\n    };\n    return (0, $ec190f1f3b1ae57b$export$4a68059d3a005c64)('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json'\n    });\n};\n\n\n\n\n\nconst $fb360b4e9f3d39cc$export$ed692cabb252e59b = (form)=>{\n    if (!form || form.nodeName !== 'FORM') throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n};\n\n\n\n\n\n\n\n\n\nconst $4a4df2b20f870b5d$var$findHTMLForm = (form)=>{\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\nconst $4a4df2b20f870b5d$export$c13a0f9407ffb567 = async (serviceID, templateID, form, options)=>{\n    const opts = (0, $0b89b563b8ce5c16$export$ecbd7d678ac4909b)(options);\n    const publicKey = opts.publicKey || (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).publicKey;\n    const blockHeadless = opts.blockHeadless || (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).blockHeadless;\n    const storageProvider = (0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).storageProvider || opts.storageProvider;\n    const blockList = {\n        ...(0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).blockList,\n        ...opts.blockList\n    };\n    const limitRate = {\n        ...(0, $c798475fc5eb7ae4$export$6f57813fe9f31bf9).limitRate,\n        ...opts.limitRate\n    };\n    if (blockHeadless && (0, $9e97281bc02a549f$export$b509da924d51a9a9)(navigator)) return Promise.reject((0, $ab7d2fa3f7df0c38$export$a8135c843594e85b)());\n    const currentForm = $4a4df2b20f870b5d$var$findHTMLForm(form);\n    (0, $90a7819081cf59b4$export$1f3bf48e9edf7d72)(publicKey, serviceID, templateID);\n    (0, $fb360b4e9f3d39cc$export$ed692cabb252e59b)(currentForm);\n    const formData = new FormData(currentForm);\n    if ((0, $52e7c6c8b64bb1c0$export$c7ab883573eb12a4)(blockList, formData)) return Promise.reject((0, $e033b5517693ceb4$export$b30160cec00781e)());\n    if (await (0, $ccb9264e82a8b92f$export$8b7f6a1a004faa27)(location.pathname, limitRate, storageProvider)) return Promise.reject((0, $0c0740911a700545$export$29b72785a20a20d9)());\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return (0, $ec190f1f3b1ae57b$export$4a68059d3a005c64)('/api/v1.0/email/send-form', formData);\n};\n\n\nvar $e8e08de5e84870c6$export$2e2bcd8739ae039 = {\n    init: $521ca2b4a362b637$export$2cd8252107eb640b,\n    send: $4e1a944052b5621b$export$89db4734f6c919c4,\n    sendForm: $4a4df2b20f870b5d$export$c13a0f9407ffb567,\n    EmailJSResponseStatus: $365480cad2bbacec$export$29b488039e3d4c2d\n};\n\n\nconst $365ebcaa6de46ca8$var$service_key = \"service_rsm0cx5\";\nconst $365ebcaa6de46ca8$var$template_key = \"template_o52gv6s\";\nconst $365ebcaa6de46ca8$var$public_key = \"u_I9q_rHVOlN-ya4M\";\ndocument.getElementById(\"contactForm\").addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    const formData = {\n        name: document.getElementById(\"senderName\").value,\n        email: document.getElementById(\"senderEmail\").value,\n        message: document.getElementById(\"message\").value\n    };\n    console.log(\"FormData:\", formData);\n    (0, $e8e08de5e84870c6$export$2e2bcd8739ae039).send($365ebcaa6de46ca8$var$service_key, $365ebcaa6de46ca8$var$template_key, formData, $365ebcaa6de46ca8$var$public_key).then(()=>{\n        alert(\"Email sent successfully!\");\n        document.getElementById(\"senderName\").value = \"\";\n        document.getElementById(\"senderEmail\").value = \"\";\n        document.getElementById(\"message\").value = \"\";\n    }).catch((error)=>{\n        console.error(\"Error sending email:\", error);\n        alert(\"Failed to send email. Please try again later.\");\n    });\n});\ndocument.getElementById(\"contactForm\").addEventListener(\"keydown\", function(event) {\n    if (event.key === \"Enter\") {\n        event.preventDefault();\n        const formData = {\n            name: document.getElementById(\"senderName\").value,\n            email: document.getElementById(\"senderEmail\").value,\n            message: document.getElementById(\"message\").value\n        };\n        console.log(\"FormData:\", formData);\n        (0, $e8e08de5e84870c6$export$2e2bcd8739ae039).send($365ebcaa6de46ca8$var$service_key, $365ebcaa6de46ca8$var$template_key, formData, $365ebcaa6de46ca8$var$public_key).then(()=>{\n            alert(\"Email sent successfully!\");\n            document.getElementById(\"senderName\").value = \"\";\n            document.getElementById(\"senderEmail\").value = \"\";\n            document.getElementById(\"message\").value = \"\";\n        }).catch((error)=>{\n            console.error(\"Error sending email:\", error);\n            alert(\"Failed to send email. Please try again later.\");\n        });\n    }\n});\n\n\n//# sourceMappingURL=index.db22fd7d.js.map\n","// sending email\n\nimport emailjs from \"@emailjs/browser\";\n\nconst service_key = process.env.PARCEL_EMAILJS_SERVICE_KEY;\nconst template_key = process.env.PARCEL_EMAILJS_TEMPLATE_KEY;\nconst public_key = process.env.PARCEL_EMAILJS_PUBLIC_KEY;\n\ndocument\n  .getElementById(\"contactForm\")\n  .addEventListener(\"submit\", function (event) {\n    event.preventDefault();\n    const formData = {\n      name: document.getElementById(\"senderName\").value,\n      email: document.getElementById(\"senderEmail\").value,\n      message: document.getElementById(\"message\").value,\n    };\n\n    console.log(\"FormData:\", formData);\n\n    emailjs\n      .send(service_key, template_key, formData, public_key)\n      .then(() => {\n        alert(\"Email sent successfully!\");\n        document.getElementById(\"senderName\").value = \"\";\n        document.getElementById(\"senderEmail\").value = \"\";\n        document.getElementById(\"message\").value = \"\";\n      })\n      .catch((error) => {\n        console.error(\"Error sending email:\", error);\n        alert(\"Failed to send email. Please try again later.\");\n      });\n  });\n\ndocument\n  .getElementById(\"contactForm\")\n  .addEventListener(\"keydown\", function (event) {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      const formData = {\n        name: document.getElementById(\"senderName\").value,\n        email: document.getElementById(\"senderEmail\").value,\n        message: document.getElementById(\"message\").value,\n      };\n\n      console.log(\"FormData:\", formData);\n\n      emailjs\n        .send(service_key, template_key, formData, public_key)\n        .then(() => {\n          alert(\"Email sent successfully!\");\n          document.getElementById(\"senderName\").value = \"\";\n          document.getElementById(\"senderEmail\").value = \"\";\n          document.getElementById(\"message\").value = \"\";\n        })\n        .catch((error) => {\n          console.error(\"Error sending email:\", error);\n          alert(\"Failed to send email. Please try again later.\");\n        });\n    }\n  });\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n"],"names":["$365480cad2bbacec$export$29b488039e3d4c2d","constructor","_status","_text","status","text","$c798475fc5eb7ae4$export$6f57813fe9f31bf9","origin","blockHeadless","storageProvider","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","$0b89b563b8ce5c16$export$ecbd7d678ac4909b","options","publicKey","toString","$ec190f1f3b1ae57b$export$4a68059d3a005c64","url","data","headers","response","fetch","method","body","message","responseStatus","ok","$90a7819081cf59b4$export$1f3bf48e9edf7d72","serviceID","templateID","$606788fef0a93b78$export$80b670b04253020b","templateParams","$9e97281bc02a549f$export$b509da924d51a9a9","navigator","webdriver","languages","length","$ab7d2fa3f7df0c38$export$a8135c843594e85b","$d4556afef3d17824$export$1727dd877829fee8","list","watchVariable","Array","isArray","$52e7c6c8b64bb1c0$var$isBlockListDisabled","$52e7c6c8b64bb1c0$var$getValue","name","FormData","$52e7c6c8b64bb1c0$export$c7ab883573eb12a4","params","includes","$e033b5517693ceb4$export$b30160cec00781e","$f1b4a42f5460eb37$export$88c64f8d5fea404b","throttle","id","$ccb9264e82a8b92f$var$getLeftTime","storage","lastTime","Number","Date","now","$ccb9264e82a8b92f$export$8b7f6a1a004faa27","defaultID","$0c0740911a700545$export$29b72785a20a20d9","$e8e08de5e84870c6$export$2e2bcd8739ae039","send","opts","blockList","limitRate","reject","location","pathname","JSON","stringify","lib_version","user_id","service_id","template_id","template_params","$365ebcaa6de46ca8$var$service_key","$365ebcaa6de46ca8$var$template_key","$365ebcaa6de46ca8$var$public_key","document","getElementById","addEventListener","event","preventDefault","formData","email","console","log","then","alert","catch","error"],"version":3,"file":"index.db22fd7d.js.map"}